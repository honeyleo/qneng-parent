<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lfy.qneng.dao.ModuleDataDAO" >
  <resultMap id="BaseResultMap" type="cn.lfy.qneng.model.Module" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="inputVolt" property="inputVolt" jdbcType="DOUBLE" />
    <result column="outvolt" property="outvolt" jdbcType="DOUBLE" />
    <result column="curr" property="curr" jdbcType="DOUBLE" />
    <result column="temp" property="temp" jdbcType="DOUBLE" />
    <result column="capacity" property="capacity" jdbcType="DOUBLE" />
    <result column="prevCapacity" property="prevCapacity" jdbcType="DOUBLE" />
    <result column="curCapacity" property="curCapacity" jdbcType="DOUBLE" />
    <result column="time" property="time" jdbcType="BIGINT" />
    <result column="stationId" property="stationId" jdbcType="BIGINT" />
    <result column="BunchId" property="BunchId" jdbcType="BIGINT" />
    <result column="moduleId" property="moduleId" jdbcType="BIGINT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.no != null" >
         and no = #{condition.no}
      </if>
      <if test="condition.stationId != null" >
         and stationId = #{condition.stationId}
      </if>
      <if test="condition.BunchId != null" >
         and BunchId = #{condition.BunchId}
      </if>
      <if test="condition.moduleId != null" >
         and moduleId = #{condition.moduleId}
      </if>
    </trim>
  </sql>
  
  <sql id="Example_Order_Clause">
  	<trim prefix="order by" prefixOverrides="," >
  		<if test="orderMap.id != null">
  			,id #{orderMap.id}
  		</if>
  	</trim>
  </sql>
  
  <sql id="Base_Column_List" >
    id, no, inputVolt, outvolt, curr, temp, capacity, time, stationId, bunchId, moduleId, createTime,prevCapacity,curCapacity
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.manager.model.Criteria" >
    select
    <include refid="Base_Column_List" />
    from t_module_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Order_Clause" />
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_module_data where id = #{id}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_module_data where id = #{id}
  </delete>
  
  <insert id="insert" parameterType="cn.lfy.qneng.model.ModuleData" useGeneratedKeys="true" keyProperty="id">
    insert into t_module_data (no, inputVolt, outvolt, curr, temp, capacity, time, stationId, bunchId, moduleId, createTime,prevCapacity,curCapacity)
    values (#{no}, #{inputVolt}, #{outvolt}, #{curr}, #{temp}, #{capacity}, #{time}, #{stationId}, #{bunchId}, #{moduleId}, #{createTime}, #{prevCapacity}, #{curCapacity})
  </insert>
  
  <select id="countByExample" parameterType="com.manager.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from t_module_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="getCapacity" parameterType="cn.lfy.qneng.vo.ModuleQuery" resultType="java.lang.Double">
    select 
    sum(capacity)
    from t_module_data
    where 1=1
    <if test="stationId != null">
    	and stationId = #{stationId}
    </if>
    <if test="bunchId != null">
    	and bunchId = #{bunchId}
    </if>
    <if test="moduleId != null">
    	and moduleId = #{moduleId}
    </if>
    <if test="startTime != null and endTime != null">
    	and createTime between #{startTime} and #{endTime}
    </if>
  </select>
  <select id="getDayPowerData" parameterType="cn.lfy.qneng.vo.ModuleQuery" resultType="cn.lfy.qneng.vo.PowerDataInfo">
    select 
    date_format(createTime, '%H') as value,
    sum(outvolt) as curVlot,
    sum(curr) as curCurr,
    sum(outvolt*curr) as curPower
    from t_module_data
    where 1=1
    <if test="stationId != null">
    	and stationId = #{stationId}
    </if>
    <if test="bunchId != null">
    	and bunchId = #{bunchId}
    </if>
    <if test="moduleId != null">
    	and moduleId = #{moduleId}
    </if>
    <if test="startTime != null and endTime != null">
    	and createTime between #{startTime} and #{endTime}
    </if>
    group by date_format(createTime, '%H')
    order by date_format(createTime, '%H') asc
  </select>
  <select id="getMonthCapacityData" parameterType="cn.lfy.qneng.vo.ModuleQuery" resultType="cn.lfy.qneng.vo.PowerDataInfo">
    select 
    date_format(createTime, '%d') as value,
    sum(capacity) as capacity
    from t_module_data
    where 1=1
    <if test="stationId != null">
    	and stationId = #{stationId}
    </if>
    <if test="bunchId != null">
    	and bunchId = #{bunchId}
    </if>
    <if test="moduleId != null">
    	and moduleId = #{moduleId}
    </if>
    <if test="startTime != null and endTime != null">
    	and createTime between #{startTime} and #{endTime}
    </if>
    group by date_format(createTime, '%d')
    order by date_format(createTime, '%d') asc
  </select>
  <select id="getYearCapacityData" parameterType="cn.lfy.qneng.vo.ModuleQuery" resultType="cn.lfy.qneng.vo.PowerDataInfo">
    select 
    date_format(createTime, '%m') as value,
    sum(capacity) as capacity
    from t_module_data
    where 1=1
    <if test="stationId != null">
    	and stationId = #{stationId}
    </if>
    <if test="bunchId != null">
    	and bunchId = #{bunchId}
    </if>
    <if test="moduleId != null">
    	and moduleId = #{moduleId}
    </if>
    <if test="startTime != null and endTime != null">
    	and createTime between #{startTime} and #{endTime}
    </if>
    group by date_format(createTime, '%m')
    order by date_format(createTime, '%m') asc
  </select>
  <select id="getCapacityForStartTime2EndTime">
  	select DATE_FORMAT(createTime,'%Y-%m-%d') as date,moduleId,stationId,bunchId,sum(capacity) as capacity
	from t_module_data 
	where 1=1
	and createTime between #{startTime} and #{endTime}
	GROUP BY DATE_FORMAT(createTime,'%Y-%m-%d'),moduleId;
  </select>
</mapper>